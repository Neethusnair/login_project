name: Build image and Deploy app to GKE

on:
  push:
    branches:
    - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: new-gke
  GKE_ZONE: us-central1-a
  #DEPLOYMENT_NAME: app-test
  IMAGE: login-docker

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # Build the Docker image
    #- name: Build
     # run: |-
        #docker build \
          #--tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          #--build-arg GITHUB_SHA="$GITHUB_SHA" \
          #--build-arg GITHUB_REF="$GITHUB_REF" \
          #.
    # Push the Docker image to Google Container Registry
    #- name: Publish
     # run: |-
       # docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
             
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
   
   # Deploy mongo to the GKE cluster
    - name: Deploy Mongo
      run: |-
        #./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        #kubectl create secret docker-registry gcr-access-token  --docker-server=gcr.io  --docker-username=oauth3accesstoken --docker-password="$(gcloud auth print-access-token)" --docker-email=first-732@exemplary-city-303104.iam.gserviceaccount.com
        #kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "gcr-access-token"}]}'
        ./kustomize build . | kubectl apply -f -
        #kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl wait --for=condition=ready pod -l app=mongodb
        kubectl rollout status deployment mongodb-deployment
        kubectl get services -o wide
        
    # Deploy docorized app image to the GKE cluster
    - name: Deploy Application 
      run: |-
        kubectl apply -f app-config.yaml 
        kubectl apply -f app.yaml
        kubectl get services -o wide
        
